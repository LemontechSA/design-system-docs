"use strict";(self.webpackChunklemon_system_docs=self.webpackChunklemon_system_docs||[]).push([[436],{3905:(e,a,n)=>{n.d(a,{Zo:()=>c,kt:()=>d});var t=n(7294);function o(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function r(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function s(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?r(Object(n),!0).forEach((function(a){o(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function i(e,a){if(null==e)return{};var n,t,o=function(e,a){if(null==e)return{};var n,t,o={},r=Object.keys(e);for(t=0;t<r.length;t++)n=r[t],a.indexOf(n)>=0||(o[n]=e[n]);return o}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)n=r[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=t.createContext({}),p=function(e){var a=t.useContext(l),n=a;return e&&(n="function"==typeof e?e(a):s(s({},a),e)),n},c=function(e){var a=p(e.components);return t.createElement(l.Provider,{value:a},e.children)},m={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},u=t.forwardRef((function(e,a){var n=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=p(n),d=o,b=u["".concat(l,".").concat(d)]||u[d]||m[d]||r;return n?t.createElement(b,s(s({ref:a},c),{},{components:n})):t.createElement(b,s({ref:a},c))}));function d(e,a){var n=arguments,o=a&&a.mdxType;if("string"==typeof e||o){var r=n.length,s=new Array(r);s[0]=u;var i={};for(var l in a)hasOwnProperty.call(a,l)&&(i[l]=a[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var p=2;p<r;p++)s[p]=n[p];return t.createElement.apply(null,s)}return t.createElement.apply(null,n)}u.displayName="MDXCreateElement"},7406:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>m,contentTitle:()=>p,default:()=>b,frontMatter:()=>l,metadata:()=>c,toc:()=>u});var t=n(7462),o=(n(7294),n(3905)),r=n(2735),s=n(9351),i=n(6138);const l={slug:"how-we-built-it",title:"\xbfC\xf3mo contruimos Lemon System?",authors:["jose","renzo"]},p=void 0,c={permalink:"/design-system-docs/blog/how-we-built-it",source:"@site/blog/2022-03-10-como-contruimos-lemon-system/index.mdx",title:"\xbfC\xf3mo contruimos Lemon System?",description:"Para el desarrollo de Lemon System, la librer\xeda UI del design system de Lemontech, hemos tomado diferentes decisiones con respecto a implementaciones t\xe9cnicas. En este blog planteamos las diferentes dificultades t\xe9cnicas a las que nos hemos vistos enfrentados y el c\xf3mo optamos por solucionarlas.",date:"2022-03-10T00:00:00.000Z",formattedDate:"March 10, 2022",tags:[],readingTime:5.83,hasTruncateMarker:!0,authors:[{name:"Jos\xe9 N\xfa\xf1ez",title:"Lemon System Co-Creator",url:"https://github.com/josiext",imageURL:"https://avatars.githubusercontent.com/u/79015124?v=4",key:"jose"},{name:"Renzo Talenta",title:"Lemon System Co-Creator",url:"https://github.com/rtelenta",imageURL:"https://avatars.githubusercontent.com/u/13630376?s=48&v=4",key:"renzo"}],frontMatter:{slug:"how-we-built-it",title:"\xbfC\xf3mo contruimos Lemon System?",authors:["jose","renzo"]}},m={authorsImageUrls:[void 0,void 0]},u=[{value:"Enfoque",id:"enfoque",level:2},{value:"Definici\xf3n de Bundle",id:"definici\xf3n-de-bundle",level:2},{value:"Administrador de paquetes",id:"administrador-de-paquetes",level:2},{value:"Repositorio",id:"repositorio",level:2}],d={toc:u};function b(e){let{components:a,...l}=e;return(0,o.kt)("wrapper",(0,t.Z)({},d,l,{components:a,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Para el desarrollo de Lemon System, la librer\xeda UI del design system de Lemontech, hemos tomado diferentes decisiones con respecto a implementaciones t\xe9cnicas. En este blog planteamos las diferentes dificultades t\xe9cnicas a las que nos hemos vistos enfrentados y el c\xf3mo optamos por solucionarlas."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"\ud83d\udea7 La librer\xeda sigue en desarrollo, debido a esto puede que algunos elementos escritos con el tiempo cambien o esten desactualizados.")),(0,o.kt)("h1",{id:"requerimientos"},"Requerimientos"),(0,o.kt)("p",null,"Los siguientes requerimientos fueron planteados para Lemon System:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Debe ser consistente con el Design System de Lemontech."),(0,o.kt)("li",{parentName:"ul"},"Debe ser facilmente adaptable en los equipos de Lemontech."),(0,o.kt)("li",{parentName:"ul"},"No debe crear mayores inconvenientes al ser implemenado en nuevas o en ya creadas aplicaciones.")),(0,o.kt)("h1",{id:"decisiones-de-implementaci\xf3n"},"Decisiones de implementaci\xf3n"),(0,o.kt)("h2",{id:"enfoque"},"Enfoque"),(0,o.kt)("br",null),(0,o.kt)("img",{src:r.Z,width:"600",alt:"Clasificaci\xf3n de Librer\xedas m\xe1s populares de UI"}),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Clasificaci\xf3n de Librer\xedas m\xe1s populares de UI.")),(0,o.kt)("br",null),(0,o.kt)("p",null,"Existen variados enfoques para definir una librer\xeda de interfaces, las cuales las podemos dividir en tres grandes grupos: Las librer\xedas que entregan un CSS potenciado (CSS++), librer\xedas que solamente brindan estilos (Style Systems) y librer\xedas que ofrecen un manejo del comportamiento (Behavior Libraries)."),(0,o.kt)("p",null,"La necesidad principales que se quer\xeda cubrir con Lemon System era la de acelerar los desarrollos internos y crear una forma de que estas interfaces de usuario sean consistentes con el Design System de Lemontech en las diferentes aplicaciones que se desarrollasen, por esto, la mejor opci\xf3n era optar por una librer\xeda que cubriese las 3 categor\xedas mencionadas, tal como lo hacen ",(0,o.kt)("a",{parentName:"p",href:"https://mui.com"},"MUI"),", ",(0,o.kt)("a",{parentName:"p",href:"https://chakra-ui.com"},"Chakra UI")," y ",(0,o.kt)("a",{parentName:"p",href:"https://mantine.dev"},"Mantine")),(0,o.kt)("br",null),(0,o.kt)("img",{src:s.Z,width:"400",alt:"Sub-categorias de librer\xedas"}),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Sub-categorias de librer\xedas.")),(0,o.kt)("br",null),(0,o.kt)("p",null,"Para que la librer\xeda fuese facilmente adoptable era necesario que su estilizaci\xf3n no fuese compleja y preferiblemente que no se tuviese que crear CSS StyleSheets para esto sino que fuese simplemente con clases de Tailwind CSS, que era algo, que en ciertos equipos, ya estaba siendo aplicado y les facilitiba el desarrollo."),(0,o.kt)("p",null,"En Chakra UI, MUI y Mantine la estilizaci\xf3n es mediante estilos como propiedad (Style Props) o usando la convenci\xf3n xs, usando e inspirandose en librer\xedas como ",(0,o.kt)("a",{parentName:"p",href:"https://styled-system.com"},"Styled System")," y ",(0,o.kt)("a",{parentName:"p",href:"https://theme-ui.com"},"Theme UI"),"."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Sub-categorias de librer\xedas",src:n(2443).Z,width:"923",height:"214"}),"\n",(0,o.kt)("em",{parentName:"p"},"Sub-categorias de librer\xedas.")),(0,o.kt)("p",null,"Este enfoque de crear una librer\xeda la cual, aparte de brindar estilos y comportamiento, se pudiese estilizar con Tailwind CSS es novedoso y no teniamos presedentes en los cuales inspirarnos, por lo cual hicimos una investigaci\xf3n al respecto para probar su factibilidad t\xe9cnica probando las tres siguientes opciones:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://tailwindcss.com"},"Tailwind CSS")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/ben-rogerson/twin.macro"},"Twin.macro")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://twind.dev"},"Twind"))),(0,o.kt)("p",null,"Lo primero que se puede pensar es: \xbfpor qu\xe9 no usar simplemente Tailwind CSS en Lemon System y permitir que los desarrolladores estilizen estas con clases de Tailwind?. Es una pregunta totalmente valida pero que lastitamente no es factible."),(0,o.kt)("p",null,"Tailwind CSS en una aplicaci\xf3n de React funciona con los post-procesador de CSS: ",(0,o.kt)("a",{parentName:"p",href:"https://autoprefixer.github.io"},"Autoprefixer")," y ",(0,o.kt)("a",{parentName:"p",href:"https://purgecss.com"},"PurgeCSS"),", estos en conjunto pueden inyectar CSS a un fichero CSS StyleSheet con las clases de Tailwind CSS que son usadas en la app."),(0,o.kt)("p",null,"La principal complicaci\xf3n t\xe9cnica que tiene el implementar Tailwind CSS en la librer\xeda directamente es que es imperioso para Tailwind inyectar CSS en un CSS StyleSheet."),(0,o.kt)("p",null,"Debido a lo anterior, este proceso ya no se le podr\xeda encargar a la librer\xeda sino que la responsabilidad de configurar Tailwind CSS es traspasada al que implementa la librer\xeda en su aplicaci\xf3n, y lo mismo pasar\xeda con respecto a su configuraci\xf3n, que depender\xeda del framework que este ocupando (create-react-app, Next.js, Vite, etc...)."),(0,o.kt)("p",null,"Otro punto a considerar es en el ambiente desarrollo, en este, para que fuese posible desarrollar con Tailwind CSS se tendr\xeda que implementar una configuraci\xf3n en la empaquetaci\xf3n del c\xf3digo fuente para poder userse junto con Storybook, luego, crear otra configuraci\xf3n en la empaquetaci\xf3n para el bundle que ser\xeda distribuido en npm y, por \xfaltimo, se tendr\xeda que tener en cuenta tambi\xe9n el purge al implementar la librer\xeda en alguna app."),(0,o.kt)("p",null,"El conjunto de estas problematicos nos hizo decantarnos por las opciones de Tailwind css-in-js como Twind y Twin.macro."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Esbuild comparation",src:n(7214).Z,width:"1268",height:"643"}),"\n",(0,o.kt)("em",{parentName:"p"},"Comparaci\xf3n entre Twin.macro y Twind.")),(0,o.kt)("p",null,"Twin.macro es una librer\xeda que funciona con una ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/kentcdodds/babel-plugin-macros"},"Macro")," de Babel que permite estilizar componentes css-in-js usando clases de Tailwdin CSS, esta transformaci\xf3n es hecha en la compilaci\xf3n."),(0,o.kt)("p",null,"Esta alternativa si bien es interesante para ser implementada en aplicaciones no lo es tanto para librer\xedas. Si se implementa en una librer\xeda, como en Lemon System, y luego esta es instalada en una app, como la transformaci\xf3n de Babel es en build time, la estilizaci\xf3n con clases de Tailwind CSS que se haga en los componentes no se ver\xedan reflejados."),(0,o.kt)("p",null,"En ",(0,o.kt)("strong",{parentName:"p"},"Twind")," es diferente, no es necesario una compilaci\xf3n previa y en comparaci\xf3n de otras librer\xedas css-in-js su inyecci\xf3n de CSS es ",(0,o.kt)("a",{parentName:"p",href:"https://twind.dev/handbook/introduction.html#benchmarks"},"m\xe1s optima"),". Por lo que usar Twind facil y optimamente permitir\xeda estilizar los componentes de Lemon System con clases de Tailwind CSS por parte del desarrollador y es por la opcion por la que optamos."),(0,o.kt)(i.zx,{className:"uppercase p-10",onClick:()=>alert("Made with Twind! \ud83d\ude03"),mdxType:"Button"},"Press me!"),(0,o.kt)("br",null),(0,o.kt)("br",null),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'import { Button } from "lemon-system";\n\n<Button className="uppercase p-10">Press me!</Button>;\n')),(0,o.kt)("h2",{id:"definici\xf3n-de-bundle"},"Definici\xf3n de Bundle"),(0,o.kt)("p",null,"Para empaquetar el codigo fuente y poder distribuir la librer\xeda en npm teniamos diferentes opciones:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Webpack"),(0,o.kt)("li",{parentName:"ul"},"Rollup"),(0,o.kt)("li",{parentName:"ul"},"Esbuild")),(0,o.kt)("p",null,"Uno de los principios que tomamos al optar por soluciones son la simplicidad y la eficienca."),(0,o.kt)("p",null,"Webpack es la soluci\xf3n m\xe1s comun actualmente para las aplicaciones web, lo usa ",(0,o.kt)("strong",{parentName:"p"},"create-react-app")," y ",(0,o.kt)("strong",{parentName:"p"},"next.js")," (por el momento) sin embargo la libertad que da para ser configurado complejiza su implementaci\xf3n en una librer\xeda donde debe ser configurado de cero, por otro lado, no es el empaquetador m\xe1s rapido por lo que la agilidad del deploy del proyecto se ver\xeda afectado."),(0,o.kt)("p",null,"Rollup y Esbuild son dos soluciones m\xe1s contemporaneas que webpack, en ambas su implementaci\xf3n es m\xe1s sencilla y directa, sin embargo, por lejos, era mucho mayor la eficiencia en el tiempo de empaquetado que nos daba Esbuild, que por detras usa el lenguaje Go y compila a lenguaje maquina."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Esbuild comparation",src:n(1529).Z,width:"853",height:"407"}),"\n",(0,o.kt)("em",{parentName:"p"},"Benchmark ",(0,o.kt)("a",{parentName:"em",href:"https://esbuild.github.io"},"https://esbuild.github.io"))),(0,o.kt)("h2",{id:"administrador-de-paquetes"},"Administrador de paquetes"),(0,o.kt)("p",null,"Como administrador de librer\xedas se tomaron en cuenta las siguientes:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"npm"),(0,o.kt)("li",{parentName:"ul"},"yarn"),(0,o.kt)("li",{parentName:"ul"},"pnpm")),(0,o.kt)("p",null,"Uno de los principios t\xe9cnicos por lo que nos guiamos para la contrucci\xf3n de Lemon System fue la simplicidad, el evitar implementaci\xf3nes que no contuviesen mayores beneficios."),(0,o.kt)("p",null,"Con respecto a Yarn, si bien, tiempo atras, era optada por usarse en vez de npm debido a que era m\xe1s eficiente como administrador de paquetes, actualmente no hay gran diferenc\xeda entre estas, y sumandole el hecho de que yarn sea algo externo a Node y no viniese con este instalado como si lo hace npm es por lo cual que lo descartamos."),(0,o.kt)("p",null,"Pnpm nos ofrecia una mayor eficiencia que npm, pero decidimos optar por esta ultima sin embargo, esto debido a que con pnpm nos encontramos con problemas de compatibilidad con otras librer\xedas debido a su forma de organizar ",(0,o.kt)("em",{parentName:"p"},"node_modules"),"."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Esbuild comparation",src:n(2534).Z,width:"657",height:"270"}),"\n",(0,o.kt)("em",{parentName:"p"},"Benchmark ",(0,o.kt)("a",{parentName:"em",href:"https://pnpm.io/benchmarks"},"https://pnpm.io/benchmarks"))),(0,o.kt)("h2",{id:"repositorio"},"Repositorio"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Monorepo (turborepo)"),(0,o.kt)("li",{parentName:"ul"},"Monolito")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"En contrucci\xf3n...")))}b.isMDXComponent=!0},9351:(e,a,n)=>{n.d(a,{Z:()=>t});const t=n.p+"assets/images/librarie-subcategories-3a9bebb9338b6bbc953a91503a2169a8.png"},2735:(e,a,n)=>{n.d(a,{Z:()=>t});const t=n.p+"assets/images/ui-libraries-239319149e0a58618272e09b24523f0b.png"},2443:(e,a,n)=>{n.d(a,{Z:()=>t});const t=n.p+"assets/images/code-comparation-91cf60ce8a08cbef432866e3ae20edae.png"},1529:(e,a,n)=>{n.d(a,{Z:()=>t});const t=n.p+"assets/images/esbuild-comparation-036e7957bf72ae4404b08a54cf545b7c.png"},2534:(e,a,n)=>{n.d(a,{Z:()=>t});const t=n.p+"assets/images/packages-comparation-ef2026a6804528eefa586fbf10d48c66.png"},7214:(e,a,n)=>{n.d(a,{Z:()=>t});const t=n.p+"assets/images/twind-twin-comparation-2b207fa524f9b6c2b0c8d1fcb69e30aa.png"}}]);