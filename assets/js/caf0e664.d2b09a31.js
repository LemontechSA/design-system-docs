"use strict";(self.webpackChunklemon_system_docs=self.webpackChunklemon_system_docs||[]).push([[258],{2377:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"how-we-built-it","metadata":{"permalink":"/design-system-docs/blog/how-we-built-it","source":"@site/blog/2022-03-10-como-contruimos-lemon-system/index.md","title":"\xbfC\xf3mo contruimos Lemon System?","description":"Para definir y desarrollar la librer\xeda UI de React de Lemon System hemos tomado diferentes decisiones t\xe9cnicas. En este blog planteamos las dificultades a las que nos vimos enfrentados y el c\xf3mo y por qu\xe9 optamos por solucionarlas.","date":"2022-03-10T00:00:00.000Z","formattedDate":"March 10, 2022","tags":[],"readingTime":2.32,"hasTruncateMarker":true,"authors":[{"name":"Jos\xe9 N\xfa\xf1ez","title":"Lemon System Co-Creator","url":"https://github.com/josiext","imageURL":"https://avatars.githubusercontent.com/u/79015124?v=4","key":"jose"},{"name":"Renzo Talenta","title":"Lemon System Co-Creator","url":"https://github.com/rtelenta","imageURL":"https://avatars.githubusercontent.com/u/13630376?s=48&v=4","key":"renzo"}],"frontMatter":{"slug":"how-we-built-it","title":"\xbfC\xf3mo contruimos Lemon System?","authors":["jose","renzo"]}},"content":"Para definir y desarrollar la librer\xeda UI de React de Lemon System hemos tomado diferentes decisiones t\xe9cnicas. En este blog planteamos las dificultades a las que nos vimos enfrentados y el c\xf3mo y por qu\xe9 optamos por solucionarlas.\\n\\n\x3c!--truncate--\x3e\\n\\n> \ud83d\udea7 La librer\xeda sigue en desarrollo as\xed que pueden cambiar algunas cosas escritas aqu\xed con el tiempo.\\n\\n\\n# Requerimientos\\n\\nLos siguientes requerimientos fueron planteados para la librer\xeda UI del Design System de Lemontech:\\n\\n- Debe ser consistente con el Design System.\\n- Debe ser facilmente adaptable en los equipos de Lemontech, considerando la conformaci\xf3n de estos en su mayor\xeda por ingenieros Full-Stacks.\\n- No debe crear mayores inconvenientes al implementarla en nuevas o en antiguas aplicaciones ya creadas.\\n\\n# Decisiones de implementaci\xf3n \\n\\n## Estilos\\n\\nDos formas de implementar la estilizaci\xf3n de los componentes\\n\\n- Style Props (style-system, xstyled, theme-ui)\\n- Tailwind como css-in-js (twind, twin.macro)\\n\\nSi bien la opci\xf3n de Style Props es comun en las librer\xedas de componentes de Javascript, quisimos optar por la opci\xf3n de css-in-js usando Twind para permitir a los desarrolladores estilizar los componentes con Tailwind. \\n\\nAl probar prototipos con diferentes librer\xedas de Style Props nos dimos cuenta que, si bien, es una forma com\xfan de hacer librer\xedas, sorpresivamente, no hay librer\xeda en al comunidad que permita implementarlo facilmente, eso y que adem\xe1s involucrar\xeda un gran cambio en la forma de estilizar componentes por parte de los equipos internos de Lemontech nos hizo decantarnos por la segunda opci\xf3n.\\n\\nEl hacer una librer\xeda basada en Tailwind con twind, es una forma novedosa de hacer una librer\xeda de UI, pero estabamos seguro que tendr\xeda un mejor recibimiento por parte de los desarrolladores internos y por lo mismo iba a hacer m\xe1s facil la adopci\xf3n de este por parte de los equipos de Lemontech ya que, en su mayor\xeda, ya estan familiarizados con usar Tailwind.\\n\\n## Definici\xf3n de Bundle\\n\\nPara empaquetar el codigo fuente y poder distribuir la librer\xeda en npm teniamos var\xedas opciones.\\n\\n- Webpack\\n- Rollup\\n- Esbuild\\n\\nUno de los principios que tomamos al optar por soluciones son la simplicidad y la eficienca. \\n\\nWebpack es la soluci\xf3n m\xe1s comun actualmente para las aplicaciones web, lo usa **create-react-app** y **next.js** (por el momento) sin embargo la libertad que da para ser configurado complejiza su implementaci\xf3n en una librer\xeda donde debe ser configurado de cero y por otro lado, no es el empaquetador m\xe1s rapido por lo que la agilidad de deploy se ver\xeda afectado. \\n\\nRollup y Esbuild son dos soluciones m\xe1s contemporaneas que webpack, ambas su implementaci\xf3n son m\xe1s sencillas y directas, sin embargo, por lejos la eficiencia en el tiempo de empaquetado que nos da Esbuild que por detras usa Rust es un   \\n\\n\\n## Administrador de paquetes\\n\\n- npm\\n- yarn\\n- pnpm\\n\\n## Repositorio\\n\\n- Monorepo (turborepo)\\n- Monolito"}]}')}}]);